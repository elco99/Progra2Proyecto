/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import com.lowagie.text.Document;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Dany
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        int op = JOptionPane.showConfirmDialog(this, "Desea leer las instrucciones?");
        if (op == JOptionPane.OK_OPTION) {
            Instrucciones.setModal(true);
            Instrucciones.pack();
            Instrucciones.setVisible(true);
        }
        panel_flujo.setVisible(false);
        panel_red.setVisible(false);
        panel_organigrama.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cr_flujo = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        flujo_add_decision = new javax.swing.JButton();
        flujo_crear_documento = new javax.swing.JButton();
        flujo_crear_proceso = new javax.swing.JButton();
        flujo_add_subproceso = new javax.swing.JButton();
        flujo_crear_datos = new javax.swing.JButton();
        flujo_crear_inicio = new javax.swing.JButton();
        flujo_add_vertical = new javax.swing.JPanel();
        jp_flujo_vertical = new javax.swing.JButton();
        flujo_add_horizontal = new javax.swing.JPanel();
        flujo_crear_horizontal = new javax.swing.JButton();
        jp_flujo = new javax.swing.JPanel();
        jp_flujo_guardar = new javax.swing.JButton();
        flujo_colors = new javax.swing.JPanel();
        cr_flujo_abrir = new javax.swing.JButton();
        limpiar_flujo = new javax.swing.JButton();
        cr_flujo_imprimir = new javax.swing.JButton();
        cr_red = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        red_add_pc = new javax.swing.JButton();
        red_add_laptop = new javax.swing.JButton();
        red_add_terminal = new javax.swing.JButton();
        red_add_tablet = new javax.swing.JButton();
        red_add_pda = new javax.swing.JButton();
        red_add_fibra = new javax.swing.JButton();
        red_add_panel = new javax.swing.JButton();
        red_add_central = new javax.swing.JButton();
        red_add_torre = new javax.swing.JButton();
        red_add_repetidor = new javax.swing.JButton();
        red_add_satelite = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        red_add_antena = new javax.swing.JButton();
        red_Add_lector = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        red_add_horizontal = new javax.swing.JPanel();
        flujo_crear_horizontal1 = new javax.swing.JButton();
        red_add_vertical = new javax.swing.JPanel();
        jp_flujo_vertical1 = new javax.swing.JButton();
        jp_red = new javax.swing.JPanel();
        cr_red_guardar = new javax.swing.JButton();
        flujo_colors1 = new javax.swing.JPanel();
        cr_red_abrir = new javax.swing.JButton();
        limpiar_red = new javax.swing.JButton();
        cr_red_imprimir = new javax.swing.JButton();
        cr_organigrama = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        orga_add_ejecutivo = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        orga_add_puesto = new javax.swing.JButton();
        orga_add_consultor = new javax.swing.JButton();
        orga_add_ayudante = new javax.swing.JButton();
        orga_add_director = new javax.swing.JButton();
        orga_add_informelinea = new javax.swing.JButton();
        orga_add_vacante = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        organigrama_add_horizontal = new javax.swing.JPanel();
        flujo_crear_horizontal2 = new javax.swing.JButton();
        organigrama_add_vertical = new javax.swing.JPanel();
        jp_flujo_vertical2 = new javax.swing.JButton();
        jp_organigrama = new javax.swing.JPanel();
        cr_organigrama_guardar = new javax.swing.JButton();
        flujo_colors2 = new javax.swing.JPanel();
        cr_organigrama_abrir = new javax.swing.JButton();
        limpiar_organigrama = new javax.swing.JButton();
        cr_organigrama_imprimir = new javax.swing.JButton();
        jp_color = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jp_color_fuente = new javax.swing.JComboBox();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jp_color_tama√±o = new javax.swing.JComboBox();
        jLabel41 = new javax.swing.JLabel();
        negro = new javax.swing.JLabel();
        gris = new javax.swing.JLabel();
        marron = new javax.swing.JLabel();
        rojo = new javax.swing.JLabel();
        naranja = new javax.swing.JLabel();
        amarillo = new javax.swing.JLabel();
        verde = new javax.swing.JLabel();
        celeste = new javax.swing.JLabel();
        azul = new javax.swing.JLabel();
        morado = new javax.swing.JLabel();
        blanco = new javax.swing.JLabel();
        gris_suave = new javax.swing.JLabel();
        cafe = new javax.swing.JLabel();
        rosado = new javax.swing.JLabel();
        dorado = new javax.swing.JLabel();
        piel = new javax.swing.JLabel();
        verde_claro = new javax.swing.JLabel();
        azul_claro = new javax.swing.JLabel();
        azul_feo = new javax.swing.JLabel();
        morado_claro = new javax.swing.JLabel();
        jp_color_estilo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        aumentar_size = new javax.swing.JButton();
        decrease_size = new javax.swing.JButton();
        menu_pop = new javax.swing.JPopupMenu();
        popm_text = new javax.swing.JMenuItem();
        popm_eliminar = new javax.swing.JMenuItem();
        popm_copy = new javax.swing.JMenuItem();
        menu_pegar = new javax.swing.JPopupMenu();
        Pegar = new javax.swing.JMenuItem();
        Instrucciones = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jb_organigrama = new javax.swing.JButton();
        jb_flujo = new javax.swing.JButton();
        jb_red = new javax.swing.JButton();
        inicio = new javax.swing.JLayeredPane();
        panel_organigrama = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        crear_orgranigrama = new javax.swing.JButton();
        panel_red = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        crear_red = new javax.swing.JButton();
        panel_flujo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        crear_flujo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        salir = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setText("Proceso");

        jLabel30.setText("Decision");

        jLabel31.setText("Subproceso");

        jLabel32.setText("Inicio/Fin");

        jLabel33.setText("Documento");

        jLabel34.setText("Datos");

        jLabel35.setText("Linea Vertical");

        jLabel36.setText("Linea Horizontal");

        flujo_add_decision.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_flujo/flujo_decision.png"))); // NOI18N
        flujo_add_decision.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_add_decision.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_add_decision.setPreferredSize(new java.awt.Dimension(70, 70));
        flujo_add_decision.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flujo_add_decisionMouseClicked(evt);
            }
        });

        flujo_crear_documento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_flujo/flujo_doc.png"))); // NOI18N
        flujo_crear_documento.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_crear_documento.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_crear_documento.setPreferredSize(new java.awt.Dimension(70, 70));
        flujo_crear_documento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flujo_crear_documentoMouseClicked(evt);
            }
        });

        flujo_crear_proceso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_flujo/flujo_proceso.png"))); // NOI18N
        flujo_crear_proceso.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_crear_proceso.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_crear_proceso.setPreferredSize(new java.awt.Dimension(70, 70));
        flujo_crear_proceso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flujo_crear_procesoMouseClicked(evt);
            }
        });

        flujo_add_subproceso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_flujo/flujo_sp.png"))); // NOI18N
        flujo_add_subproceso.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_add_subproceso.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_add_subproceso.setPreferredSize(new java.awt.Dimension(70, 70));
        flujo_add_subproceso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flujo_add_subprocesoMouseClicked(evt);
            }
        });

        flujo_crear_datos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_flujo/flujo_datos.png"))); // NOI18N
        flujo_crear_datos.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_crear_datos.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_crear_datos.setPreferredSize(new java.awt.Dimension(70, 70));
        flujo_crear_datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flujo_crear_datosMouseClicked(evt);
            }
        });

        flujo_crear_inicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_flujo/flujo_fin.png"))); // NOI18N
        flujo_crear_inicio.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_crear_inicio.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_crear_inicio.setPreferredSize(new java.awt.Dimension(70, 70));
        flujo_crear_inicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flujo_crear_inicioMouseClicked(evt);
            }
        });

        flujo_add_vertical.setPreferredSize(new java.awt.Dimension(70, 70));
        flujo_add_vertical.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flujo_add_verticalMouseClicked(evt);
            }
        });

        jp_flujo_vertical.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jp_flujo_vertical.setMaximumSize(new java.awt.Dimension(70, 70));
        jp_flujo_vertical.setMinimumSize(new java.awt.Dimension(70, 70));
        jp_flujo_vertical.setPreferredSize(new java.awt.Dimension(70, 70));

        javax.swing.GroupLayout flujo_add_verticalLayout = new javax.swing.GroupLayout(flujo_add_vertical);
        flujo_add_vertical.setLayout(flujo_add_verticalLayout);
        flujo_add_verticalLayout.setHorizontalGroup(
            flujo_add_verticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flujo_add_verticalLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jp_flujo_vertical, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        flujo_add_verticalLayout.setVerticalGroup(
            flujo_add_verticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flujo_add_verticalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jp_flujo_vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        flujo_add_horizontal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flujo_add_horizontalMouseClicked(evt);
            }
        });

        flujo_crear_horizontal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        flujo_crear_horizontal.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_crear_horizontal.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_crear_horizontal.setPreferredSize(new java.awt.Dimension(70, 70));

        javax.swing.GroupLayout flujo_add_horizontalLayout = new javax.swing.GroupLayout(flujo_add_horizontal);
        flujo_add_horizontal.setLayout(flujo_add_horizontalLayout);
        flujo_add_horizontalLayout.setHorizontalGroup(
            flujo_add_horizontalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flujo_add_horizontalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(flujo_crear_horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        flujo_add_horizontalLayout.setVerticalGroup(
            flujo_add_horizontalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flujo_add_horizontalLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(flujo_crear_horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(flujo_add_subproceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(160, 197, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(flujo_crear_proceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel31)
                                .addComponent(flujo_add_vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel32)
                                .addComponent(flujo_add_decision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel30)
                                .addComponent(flujo_crear_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel34)
                                .addComponent(flujo_crear_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel36)
                                .addComponent(flujo_add_horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(flujo_crear_documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flujo_add_decision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flujo_crear_proceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flujo_add_subproceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flujo_crear_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flujo_crear_documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(flujo_crear_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flujo_add_vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(flujo_add_horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jp_flujo.setBackground(new java.awt.Color(255, 255, 255));
        jp_flujo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jp_flujo.setMaximumSize(new java.awt.Dimension(612, 700));
        jp_flujo.setMinimumSize(new java.awt.Dimension(612, 700));
        jp_flujo.setPreferredSize(new java.awt.Dimension(612, 700));
        jp_flujo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_flujoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_flujoLayout = new javax.swing.GroupLayout(jp_flujo);
        jp_flujo.setLayout(jp_flujoLayout);
        jp_flujoLayout.setHorizontalGroup(
            jp_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );
        jp_flujoLayout.setVerticalGroup(
            jp_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );

        jp_flujo_guardar.setText("Guardar");
        jp_flujo_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_flujo_guardarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout flujo_colorsLayout = new javax.swing.GroupLayout(flujo_colors);
        flujo_colors.setLayout(flujo_colorsLayout);
        flujo_colorsLayout.setHorizontalGroup(
            flujo_colorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );
        flujo_colorsLayout.setVerticalGroup(
            flujo_colorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 587, Short.MAX_VALUE)
        );

        cr_flujo_abrir.setText("Abrir");
        cr_flujo_abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr_flujo_abrirMouseClicked(evt);
            }
        });

        limpiar_flujo.setText("Limpiar");
        limpiar_flujo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiar_flujoMouseClicked(evt);
            }
        });

        cr_flujo_imprimir.setText("Imprimir");
        cr_flujo_imprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr_flujo_imprimirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout cr_flujoLayout = new javax.swing.GroupLayout(cr_flujo.getContentPane());
        cr_flujo.getContentPane().setLayout(cr_flujoLayout);
        cr_flujoLayout.setHorizontalGroup(
            cr_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cr_flujoLayout.createSequentialGroup()
                .addGroup(cr_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cr_flujoLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cr_flujoLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(cr_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cr_flujo_imprimir)
                            .addGroup(cr_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jp_flujo_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cr_flujo_abrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp_flujo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(cr_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cr_flujoLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(flujo_colors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cr_flujoLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(limpiar_flujo)))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        cr_flujoLayout.setVerticalGroup(
            cr_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cr_flujoLayout.createSequentialGroup()
                .addGroup(cr_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cr_flujoLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(cr_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jp_flujo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(cr_flujoLayout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jp_flujo_guardar)
                                .addGap(18, 18, 18)
                                .addComponent(cr_flujo_abrir)
                                .addGap(18, 18, 18)
                                .addComponent(cr_flujo_imprimir))))
                    .addGroup(cr_flujoLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(flujo_colors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limpiar_flujo)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        red_add_pc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_pc.png"))); // NOI18N
        red_add_pc.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_pc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_pcMouseClicked(evt);
            }
        });

        red_add_laptop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_laptop.png"))); // NOI18N
        red_add_laptop.setMaximumSize(new java.awt.Dimension(70, 70));
        red_add_laptop.setMinimumSize(new java.awt.Dimension(70, 70));
        red_add_laptop.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_laptop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_laptopMouseClicked(evt);
            }
        });

        red_add_terminal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_terminal.png"))); // NOI18N
        red_add_terminal.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_terminal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_terminalMouseClicked(evt);
            }
        });

        red_add_tablet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_tablet.png"))); // NOI18N
        red_add_tablet.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_tablet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_tabletMouseClicked(evt);
            }
        });

        red_add_pda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_pda.png"))); // NOI18N
        red_add_pda.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_pda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_pdaMouseClicked(evt);
            }
        });

        red_add_fibra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_fibra.png"))); // NOI18N
        red_add_fibra.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_fibra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_fibraMouseClicked(evt);
            }
        });

        red_add_panel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_conex.png"))); // NOI18N
        red_add_panel.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_panelMouseClicked(evt);
            }
        });

        red_add_central.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_com.png"))); // NOI18N
        red_add_central.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_central.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_centralMouseClicked(evt);
            }
        });

        red_add_torre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_torre.png"))); // NOI18N
        red_add_torre.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_torre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_torreMouseClicked(evt);
            }
        });

        red_add_repetidor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_repetidor.png"))); // NOI18N
        red_add_repetidor.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_repetidor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_repetidorMouseClicked(evt);
            }
        });

        red_add_satelite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_satelite.png"))); // NOI18N
        red_add_satelite.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_satelite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_sateliteMouseClicked(evt);
            }
        });

        jLabel5.setText("PC");

        jLabel6.setText("Equipo Portatil");

        jLabel8.setText("Terminal");

        jLabel9.setText("Tablet PC");

        jLabel10.setText("PDA");

        jLabel11.setText("Fibra Optica");

        jLabel12.setText("Panel Conexion");

        jLabel13.setText("Central Conmutacion");

        jLabel14.setText("Torre Transmision");

        jLabel15.setText("Repetidor");

        jLabel16.setText("Satelite");

        jLabel17.setText("Antena Parabolica");

        jLabel18.setText("Lector Tarjeta");

        red_add_antena.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_antena.png"))); // NOI18N
        red_add_antena.setMaximumSize(new java.awt.Dimension(70, 70));
        red_add_antena.setMinimumSize(new java.awt.Dimension(70, 70));
        red_add_antena.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_antena.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_antenaMouseClicked(evt);
            }
        });

        red_Add_lector.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_red/red_lector.png"))); // NOI18N
        red_Add_lector.setMaximumSize(new java.awt.Dimension(70, 70));
        red_Add_lector.setMinimumSize(new java.awt.Dimension(70, 70));
        red_Add_lector.setPreferredSize(new java.awt.Dimension(70, 70));
        red_Add_lector.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_Add_lectorMouseClicked(evt);
            }
        });

        jLabel19.setText("Linea Horizontal");

        jLabel20.setText("Linea Vertical");

        red_add_horizontal.setBackground(new java.awt.Color(255, 255, 255));
        red_add_horizontal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_horizontalMouseClicked(evt);
            }
        });

        flujo_crear_horizontal1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        flujo_crear_horizontal1.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_crear_horizontal1.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_crear_horizontal1.setPreferredSize(new java.awt.Dimension(70, 70));

        javax.swing.GroupLayout red_add_horizontalLayout = new javax.swing.GroupLayout(red_add_horizontal);
        red_add_horizontal.setLayout(red_add_horizontalLayout);
        red_add_horizontalLayout.setHorizontalGroup(
            red_add_horizontalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, red_add_horizontalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(flujo_crear_horizontal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        red_add_horizontalLayout.setVerticalGroup(
            red_add_horizontalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(red_add_horizontalLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(flujo_crear_horizontal1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        red_add_vertical.setBackground(new java.awt.Color(255, 255, 255));
        red_add_vertical.setPreferredSize(new java.awt.Dimension(70, 70));
        red_add_vertical.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                red_add_verticalMouseClicked(evt);
            }
        });

        jp_flujo_vertical1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jp_flujo_vertical1.setMaximumSize(new java.awt.Dimension(70, 70));
        jp_flujo_vertical1.setMinimumSize(new java.awt.Dimension(70, 70));
        jp_flujo_vertical1.setPreferredSize(new java.awt.Dimension(70, 70));

        javax.swing.GroupLayout red_add_verticalLayout = new javax.swing.GroupLayout(red_add_vertical);
        red_add_vertical.setLayout(red_add_verticalLayout);
        red_add_verticalLayout.setHorizontalGroup(
            red_add_verticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, red_add_verticalLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jp_flujo_vertical1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        red_add_verticalLayout.setVerticalGroup(
            red_add_verticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, red_add_verticalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jp_flujo_vertical1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(red_add_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(red_add_repetidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(red_add_central, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel5))
                                    .addComponent(red_add_pc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(red_add_laptop, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(red_add_terminal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(red_add_tablet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(93, 93, 93)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(red_add_pda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(red_add_fibra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(red_add_torre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(red_add_satelite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(red_add_antena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel18))
                                    .addComponent(red_Add_lector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel19))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(red_add_vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(red_add_horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_laptop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_pc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_terminal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_tablet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_pda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_fibra, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_repetidor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_central, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(red_add_torre, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(red_add_satelite, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_add_antena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(jLabel19)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(red_add_vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(red_add_horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(red_Add_lector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jp_red.setBackground(new java.awt.Color(255, 255, 255));
        jp_red.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jp_red.setMaximumSize(new java.awt.Dimension(612, 700));
        jp_red.setMinimumSize(new java.awt.Dimension(612, 700));
        jp_red.setPreferredSize(new java.awt.Dimension(612, 700));
        jp_red.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_redMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_redLayout = new javax.swing.GroupLayout(jp_red);
        jp_red.setLayout(jp_redLayout);
        jp_redLayout.setHorizontalGroup(
            jp_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );
        jp_redLayout.setVerticalGroup(
            jp_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );

        cr_red_guardar.setText("Guardar");
        cr_red_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr_red_guardarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout flujo_colors1Layout = new javax.swing.GroupLayout(flujo_colors1);
        flujo_colors1.setLayout(flujo_colors1Layout);
        flujo_colors1Layout.setHorizontalGroup(
            flujo_colors1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
        );
        flujo_colors1Layout.setVerticalGroup(
            flujo_colors1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );

        cr_red_abrir.setText("Abrir");
        cr_red_abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr_red_abrirMouseClicked(evt);
            }
        });

        limpiar_red.setText("Limpiar");
        limpiar_red.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiar_redMouseClicked(evt);
            }
        });

        cr_red_imprimir.setText("Imprimir");
        cr_red_imprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr_red_imprimirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout cr_redLayout = new javax.swing.GroupLayout(cr_red.getContentPane());
        cr_red.getContentPane().setLayout(cr_redLayout);
        cr_redLayout.setHorizontalGroup(
            cr_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cr_redLayout.createSequentialGroup()
                .addGroup(cr_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cr_redLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cr_redLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(cr_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cr_red_imprimir)
                            .addGroup(cr_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cr_red_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cr_red_abrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(jp_red, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(cr_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cr_redLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addComponent(flujo_colors1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))
                    .addGroup(cr_redLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(limpiar_red)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        cr_redLayout.setVerticalGroup(
            cr_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cr_redLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(cr_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jp_red, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cr_redLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cr_red_guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cr_red_abrir)
                        .addGap(18, 18, 18)
                        .addComponent(cr_red_imprimir)))
                .addContainerGap())
            .addGroup(cr_redLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(flujo_colors1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(limpiar_red)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cr_organigrama.setAutoRequestFocus(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setText("Ejecutivo");

        jLabel22.setText("Director");

        orga_add_ejecutivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_organigrama/cuadrado.png"))); // NOI18N
        orga_add_ejecutivo.setMaximumSize(new java.awt.Dimension(70, 70));
        orga_add_ejecutivo.setMinimumSize(new java.awt.Dimension(70, 70));
        orga_add_ejecutivo.setPreferredSize(new java.awt.Dimension(70, 70));
        orga_add_ejecutivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orga_add_ejecutivoMouseClicked(evt);
            }
        });

        jLabel23.setText("Puesto");

        jLabel24.setText("Vacante");

        jLabel25.setText("Consultor");

        jLabel26.setText("Ayudante");

        jLabel27.setText("Linea Vertical");

        jLabel28.setText("Informe de linea");

        orga_add_puesto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_organigrama/puesto.png"))); // NOI18N
        orga_add_puesto.setMaximumSize(new java.awt.Dimension(70, 70));
        orga_add_puesto.setMinimumSize(new java.awt.Dimension(70, 70));
        orga_add_puesto.setPreferredSize(new java.awt.Dimension(70, 70));
        orga_add_puesto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orga_add_puestoMouseClicked(evt);
            }
        });

        orga_add_consultor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_organigrama/consultor.png"))); // NOI18N
        orga_add_consultor.setMaximumSize(new java.awt.Dimension(70, 70));
        orga_add_consultor.setMinimumSize(new java.awt.Dimension(70, 70));
        orga_add_consultor.setPreferredSize(new java.awt.Dimension(70, 70));
        orga_add_consultor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orga_add_consultorMouseClicked(evt);
            }
        });

        orga_add_ayudante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_organigrama/ayudante.png"))); // NOI18N
        orga_add_ayudante.setMaximumSize(new java.awt.Dimension(70, 70));
        orga_add_ayudante.setMinimumSize(new java.awt.Dimension(70, 70));
        orga_add_ayudante.setPreferredSize(new java.awt.Dimension(70, 70));
        orga_add_ayudante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orga_add_ayudanteMouseClicked(evt);
            }
        });

        orga_add_director.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_organigrama/director.png"))); // NOI18N
        orga_add_director.setMaximumSize(new java.awt.Dimension(70, 70));
        orga_add_director.setMinimumSize(new java.awt.Dimension(70, 70));
        orga_add_director.setPreferredSize(new java.awt.Dimension(70, 70));
        orga_add_director.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orga_add_directorMouseClicked(evt);
            }
        });

        orga_add_informelinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_organigrama/lineapunteada.png"))); // NOI18N
        orga_add_informelinea.setMaximumSize(new java.awt.Dimension(70, 70));
        orga_add_informelinea.setMinimumSize(new java.awt.Dimension(70, 70));
        orga_add_informelinea.setPreferredSize(new java.awt.Dimension(70, 70));
        orga_add_informelinea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orga_add_informelineaMouseClicked(evt);
            }
        });

        orga_add_vacante.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic_organigrama/cuadradopun.png"))); // NOI18N
        orga_add_vacante.setMaximumSize(new java.awt.Dimension(70, 70));
        orga_add_vacante.setMinimumSize(new java.awt.Dimension(70, 70));
        orga_add_vacante.setPreferredSize(new java.awt.Dimension(70, 70));
        orga_add_vacante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orga_add_vacanteMouseClicked(evt);
            }
        });

        jLabel29.setText("Linea Horizontal");

        organigrama_add_horizontal.setBackground(new java.awt.Color(255, 255, 255));
        organigrama_add_horizontal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                organigrama_add_horizontalMouseClicked(evt);
            }
        });

        flujo_crear_horizontal2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        flujo_crear_horizontal2.setMaximumSize(new java.awt.Dimension(70, 70));
        flujo_crear_horizontal2.setMinimumSize(new java.awt.Dimension(70, 70));
        flujo_crear_horizontal2.setPreferredSize(new java.awt.Dimension(70, 70));

        javax.swing.GroupLayout organigrama_add_horizontalLayout = new javax.swing.GroupLayout(organigrama_add_horizontal);
        organigrama_add_horizontal.setLayout(organigrama_add_horizontalLayout);
        organigrama_add_horizontalLayout.setHorizontalGroup(
            organigrama_add_horizontalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, organigrama_add_horizontalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(flujo_crear_horizontal2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        organigrama_add_horizontalLayout.setVerticalGroup(
            organigrama_add_horizontalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(organigrama_add_horizontalLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(flujo_crear_horizontal2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        organigrama_add_vertical.setBackground(new java.awt.Color(255, 255, 255));
        organigrama_add_vertical.setPreferredSize(new java.awt.Dimension(70, 70));
        organigrama_add_vertical.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                organigrama_add_verticalMouseClicked(evt);
            }
        });

        jp_flujo_vertical2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jp_flujo_vertical2.setMaximumSize(new java.awt.Dimension(70, 70));
        jp_flujo_vertical2.setMinimumSize(new java.awt.Dimension(70, 70));
        jp_flujo_vertical2.setPreferredSize(new java.awt.Dimension(70, 70));

        javax.swing.GroupLayout organigrama_add_verticalLayout = new javax.swing.GroupLayout(organigrama_add_vertical);
        organigrama_add_vertical.setLayout(organigrama_add_verticalLayout);
        organigrama_add_verticalLayout.setHorizontalGroup(
            organigrama_add_verticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, organigrama_add_verticalLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jp_flujo_vertical2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        organigrama_add_verticalLayout.setVerticalGroup(
            organigrama_add_verticalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, organigrama_add_verticalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jp_flujo_vertical2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(orga_add_ejecutivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orga_add_puesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel28)
                            .addComponent(orga_add_informelinea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)
                            .addComponent(orga_add_ayudante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel22)
                                    .addComponent(orga_add_director, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orga_add_consultor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(55, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(orga_add_vacante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29)
                                    .addComponent(organigrama_add_horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(organigrama_add_vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel21))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(orga_add_ejecutivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orga_add_director, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(orga_add_puesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(orga_add_consultor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orga_add_ayudante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addGap(14, 14, 14)
                                .addComponent(orga_add_vacante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orga_add_informelinea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(organigrama_add_horizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(organigrama_add_vertical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        jp_organigrama.setBackground(new java.awt.Color(255, 255, 255));
        jp_organigrama.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jp_organigrama.setMaximumSize(new java.awt.Dimension(612, 700));
        jp_organigrama.setMinimumSize(new java.awt.Dimension(612, 700));
        jp_organigrama.setPreferredSize(new java.awt.Dimension(612, 700));
        jp_organigrama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jp_organigramaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jp_organigramaLayout = new javax.swing.GroupLayout(jp_organigrama);
        jp_organigrama.setLayout(jp_organigramaLayout);
        jp_organigramaLayout.setHorizontalGroup(
            jp_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );
        jp_organigramaLayout.setVerticalGroup(
            jp_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );

        cr_organigrama_guardar.setText("Guardar");
        cr_organigrama_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr_organigrama_guardarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout flujo_colors2Layout = new javax.swing.GroupLayout(flujo_colors2);
        flujo_colors2.setLayout(flujo_colors2Layout);
        flujo_colors2Layout.setHorizontalGroup(
            flujo_colors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
        );
        flujo_colors2Layout.setVerticalGroup(
            flujo_colors2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );

        cr_organigrama_abrir.setText("Abrir");
        cr_organigrama_abrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr_organigrama_abrirMouseClicked(evt);
            }
        });

        limpiar_organigrama.setText("Limpiar");
        limpiar_organigrama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiar_organigramaMouseClicked(evt);
            }
        });

        cr_organigrama_imprimir.setText("Imprimir");
        cr_organigrama_imprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cr_organigrama_imprimirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout cr_organigramaLayout = new javax.swing.GroupLayout(cr_organigrama.getContentPane());
        cr_organigrama.getContentPane().setLayout(cr_organigramaLayout);
        cr_organigramaLayout.setHorizontalGroup(
            cr_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cr_organigramaLayout.createSequentialGroup()
                .addGroup(cr_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cr_organigramaLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cr_organigramaLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(cr_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cr_organigrama_imprimir)
                            .addGroup(cr_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cr_organigrama_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cr_organigrama_abrir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(44, 44, 44)
                .addComponent(jp_organigrama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(cr_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cr_organigramaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addComponent(flujo_colors2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addGroup(cr_organigramaLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(limpiar_organigrama)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        cr_organigramaLayout.setVerticalGroup(
            cr_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cr_organigramaLayout.createSequentialGroup()
                .addGroup(cr_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cr_organigramaLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(cr_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cr_organigramaLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cr_organigrama_guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cr_organigrama_abrir)
                                .addGap(18, 18, 18)
                                .addComponent(cr_organigrama_imprimir))
                            .addComponent(jp_organigrama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cr_organigramaLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(flujo_colors2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addComponent(limpiar_organigrama)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jLabel37.setText("Fuente");

        jp_color_fuente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jp_color_fuenteItemStateChanged(evt);
            }
        });

        jLabel38.setText("Estilo de Fuente");

        jLabel39.setText("Tama√±o");

        jLabel40.setText("Color");

        jp_color_tama√±o.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "12", "16", "20", "24", "28", "32", "36", "40" }));
        jp_color_tama√±o.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jp_color_tama√±oItemStateChanged(evt);
            }
        });

        jLabel41.setMaximumSize(new java.awt.Dimension(14, 13));
        jLabel41.setMinimumSize(new java.awt.Dimension(14, 13));

        negro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/negro.png"))); // NOI18N
        negro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                negroMouseClicked(evt);
            }
        });

        gris.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/gris.png"))); // NOI18N
        gris.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grisMouseClicked(evt);
            }
        });

        marron.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/marron.png"))); // NOI18N
        marron.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                marronMouseClicked(evt);
            }
        });

        rojo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/rojo.png"))); // NOI18N
        rojo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rojoMouseClicked(evt);
            }
        });

        naranja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/naranja.png"))); // NOI18N
        naranja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                naranjaMouseClicked(evt);
            }
        });

        amarillo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/amarillo.png"))); // NOI18N
        amarillo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                amarilloMouseClicked(evt);
            }
        });

        verde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/verde.png"))); // NOI18N
        verde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verdeMouseClicked(evt);
            }
        });

        celeste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/celeste.png"))); // NOI18N
        celeste.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                celesteMouseClicked(evt);
            }
        });

        azul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/azul.png"))); // NOI18N
        azul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                azulMouseClicked(evt);
            }
        });

        morado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/morado.png"))); // NOI18N
        morado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moradoMouseClicked(evt);
            }
        });

        blanco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/blanco.png"))); // NOI18N
        blanco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        blanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                blancoMouseClicked(evt);
            }
        });

        gris_suave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/gris_suave.png"))); // NOI18N
        gris_suave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gris_suaveMouseClicked(evt);
            }
        });

        cafe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/cafe.png"))); // NOI18N
        cafe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cafeMouseClicked(evt);
            }
        });

        rosado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/rosado.png"))); // NOI18N
        rosado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rosadoMouseClicked(evt);
            }
        });

        dorado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/dorado.png"))); // NOI18N
        dorado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doradoMouseClicked(evt);
            }
        });

        piel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/piel.png"))); // NOI18N
        piel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pielMouseClicked(evt);
            }
        });

        verde_claro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/verde_claro.png"))); // NOI18N
        verde_claro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verde_claroMouseClicked(evt);
            }
        });

        azul_claro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/azul_claro.png"))); // NOI18N
        azul_claro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                azul_claroMouseClicked(evt);
            }
        });

        azul_feo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/azul_feo.png"))); // NOI18N
        azul_feo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                azul_feoMouseClicked(evt);
            }
        });

        morado_claro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/color/morado_claro.png"))); // NOI18N
        morado_claro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                morado_claroMouseClicked(evt);
            }
        });

        jp_color_estilo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Bold", "Italic" }));
        jp_color_estilo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jp_color_estiloItemStateChanged(evt);
            }
        });

        jLabel4.setText("Edit Size");

        aumentar_size.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        aumentar_size.setText("+");
        aumentar_size.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aumentar_sizeMousePressed(evt);
            }
        });

        decrease_size.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        decrease_size.setText("-");
        decrease_size.setPreferredSize(new java.awt.Dimension(59, 65));
        decrease_size.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                decrease_sizeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jp_colorLayout = new javax.swing.GroupLayout(jp_color);
        jp_color.setLayout(jp_colorLayout);
        jp_colorLayout.setHorizontalGroup(
            jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_colorLayout.createSequentialGroup()
                .addGroup(jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_colorLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jLabel38)
                            .addComponent(jp_color_fuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jp_color_tama√±o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jp_colorLayout.createSequentialGroup()
                                .addGroup(jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(blanco, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(negro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jp_colorLayout.createSequentialGroup()
                                        .addComponent(gris)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(marron)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rojo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(naranja)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(amarillo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(verde)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(celeste)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(azul)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(morado))
                                    .addGroup(jp_colorLayout.createSequentialGroup()
                                        .addComponent(gris_suave)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cafe)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rosado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dorado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(piel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(verde_claro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(azul_claro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(azul_feo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(morado_claro))))
                            .addComponent(jp_color_estilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jp_colorLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(aumentar_size)
                                .addGap(18, 18, 18)
                                .addComponent(decrease_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jp_colorLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel4)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jp_colorLayout.setVerticalGroup(
            jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_colorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37)
                .addGap(4, 4, 4)
                .addComponent(jp_color_fuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel38)
                .addGap(3, 3, 3)
                .addComponent(jp_color_estilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_colorLayout.createSequentialGroup()
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jp_color_tama√±o, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp_colorLayout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(negro))
                            .addComponent(marron, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rojo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(naranja, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(amarillo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(verde, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(celeste, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(azul, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(morado, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(gris, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(8, 8, 8)
                .addGroup(jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cafe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rosado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dorado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(piel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(verde_claro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(azul_feo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(morado_claro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gris_suave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(blanco, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(azul_claro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(8, 8, 8)
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decrease_size, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aumentar_size, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        popm_text.setText("Cambiar Texto");
        popm_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popm_textActionPerformed(evt);
            }
        });
        menu_pop.add(popm_text);

        popm_eliminar.setText("Eliminar");
        popm_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popm_eliminarActionPerformed(evt);
            }
        });
        menu_pop.add(popm_eliminar);

        popm_copy.setText("Copy");
        popm_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popm_copyActionPerformed(evt);
            }
        });
        menu_pop.add(popm_copy);

        Pegar.setText("Pegar");
        Pegar.setEnabled(false);
        Pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PegarActionPerformed(evt);
            }
        });
        menu_pegar.add(Pegar);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("\t\t\t\t   INSTRUCCIONES\n1) Apretar cualquiera de los botones.\n2) Le va a salir una imagen y un boton de \"Crear\" despues de apretar el primer\n   boton.\n3) Dependiendo de cual de los tres escogio, va a salir una nueva ventana donde\n   se podra agregar nuevos jLabels,eliminar jLabels, modificar los jLabels,\n   guardar una imagen (png,jpg,jpeg,pdf) del panel con todo lo que contenga.\n   a) Si quiere guardarlo, para luego modificarlo, hay que escoger la extension \n      Dany, y luego salvarlo.\n   b) Si lo quiere abrir, solo tiene que abrir el archivo que desee (extension \n      .dany)\n   c) Si apreta Limpiar, todo el panel se limpia y obtiene una pagina en blanco.\n4) Para cambiar el texto,color de fondo, fuente, tama√±o o estilo del jLabel,\n   hay que darle un click izquierdo, al jLabel que desea seleccionar para saber\n   que ese es el jLabel que desea modificar.\n   a)Se puede mover los jLabels dandole click izquierdo, y despues arrastrarlo\n     a la posicion en donde lo desea.\n   b)Si desea alargar cualquiera de las lineas, hay que darle click izquierdo \n     primero para saber que ese esta seleccionado, y despues manterner el\n     click derecho presionado y arrastrarlo la cantidad que quiera.\n   c)Si le da click derecho a cualquier jLabel, un popup menu va a salir con \n     las opciones de Cambiar texto,Eliminar, Copiar. Dependiendo de que escogio\n     esa accion se va a cumplir.\n   d)La opcion de pegar, solo sirve cuando le da click derecho en el panel.\n   e)Si quiere cambiar el color de texto, dele click al label que desea cambiarle\n     el color de texto, y despues le da click izquierdo al color.\n     En caso que quiera cambiar el fondo, hace lo mismo solo que en vez de darle \n     click izquierdo, le da click derecho.\n5) Para imprimir, solo le da click al boton de imprimir, y escoge la maquina\n   con la que desea imprimir, y va a imprimir el panel con el que esta trabajando.\n\n");
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout InstruccionesLayout = new javax.swing.GroupLayout(Instrucciones.getContentPane());
        Instrucciones.getContentPane().setLayout(InstruccionesLayout);
        InstruccionesLayout.setHorizontalGroup(
            InstruccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
        );
        InstruccionesLayout.setVerticalGroup(
            InstruccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jb_organigrama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/orgranigrama.png"))); // NOI18N
        jb_organigrama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_organigramaActionPerformed(evt);
            }
        });

        jb_flujo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/flujo.png"))); // NOI18N
        jb_flujo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_flujoActionPerformed(evt);
            }
        });

        jb_red.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/red.png"))); // NOI18N
        jb_red.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_redActionPerformed(evt);
            }
        });

        inicio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inicio.setPreferredSize(new java.awt.Dimension(1040, 630));

        panel_organigrama.setPreferredSize(new java.awt.Dimension(1030, 630));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/organ.png"))); // NOI18N

        crear_orgranigrama.setText("Crear");
        crear_orgranigrama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crear_orgranigramaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_organigramaLayout = new javax.swing.GroupLayout(panel_organigrama);
        panel_organigrama.setLayout(panel_organigramaLayout);
        panel_organigramaLayout.setHorizontalGroup(
            panel_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_organigramaLayout.createSequentialGroup()
                .addGroup(panel_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_organigramaLayout.createSequentialGroup()
                        .addGap(404, 404, 404)
                        .addComponent(crear_orgranigrama, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_organigramaLayout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 391, Short.MAX_VALUE))
        );
        panel_organigramaLayout.setVerticalGroup(
            panel_organigramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_organigramaLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(crear_orgranigrama, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        panel_red.setPreferredSize(new java.awt.Dimension(1030, 630));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/1273.Diagrama_detallado.jpg-550x0.jpg"))); // NOI18N

        crear_red.setText("Crear");
        crear_red.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crear_redMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_redLayout = new javax.swing.GroupLayout(panel_red);
        panel_red.setLayout(panel_redLayout);
        panel_redLayout.setHorizontalGroup(
            panel_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_redLayout.createSequentialGroup()
                .addGroup(panel_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_redLayout.createSequentialGroup()
                        .addGap(429, 429, 429)
                        .addComponent(crear_red, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_redLayout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(jLabel2)))
                .addGap(0, 411, Short.MAX_VALUE))
        );
        panel_redLayout.setVerticalGroup(
            panel_redLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_redLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel2)
                .addGap(38, 38, 38)
                .addComponent(crear_red, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panel_flujo.setPreferredSize(new java.awt.Dimension(1030, 630));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/2541.Diagrama_de_flujo_basico.jpg-550x0.jpg"))); // NOI18N

        crear_flujo.setText("Crear");
        crear_flujo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crear_flujoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_flujoLayout = new javax.swing.GroupLayout(panel_flujo);
        panel_flujo.setLayout(panel_flujoLayout);
        panel_flujoLayout.setHorizontalGroup(
            panel_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_flujoLayout.createSequentialGroup()
                .addGroup(panel_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_flujoLayout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_flujoLayout.createSequentialGroup()
                        .addGap(425, 425, 425)
                        .addComponent(crear_flujo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(414, Short.MAX_VALUE))
        );
        panel_flujoLayout.setVerticalGroup(
            panel_flujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_flujoLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(crear_flujo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout inicioLayout = new javax.swing.GroupLayout(inicio);
        inicio.setLayout(inicioLayout);
        inicioLayout.setHorizontalGroup(
            inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(inicioLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_organigrama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(inicioLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_red, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(inicioLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_flujo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        inicioLayout.setVerticalGroup(
            inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(inicioLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_organigrama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(inicioLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_red, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(inicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(inicioLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panel_flujo, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        inicio.setLayer(panel_organigrama, javax.swing.JLayeredPane.DEFAULT_LAYER);
        inicio.setLayer(panel_red, javax.swing.JLayeredPane.DEFAULT_LAYER);
        inicio.setLayer(panel_flujo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu1.setText("File");

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        jMenu1.add(salir);

        jMenuBar1.add(jMenu1);
        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jb_red, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jb_flujo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_organigrama, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(120, 120, 120)
                .addComponent(inicio, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jb_flujo, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jb_red, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(jb_organigrama, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Al apretar Salir, el jframe se cierrra
    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(WIDTH);
    }//GEN-LAST:event_salirActionPerformed

    ///// Sale imagen y boton crear, despues de apretar la imagen
    private void jb_flujoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_flujoActionPerformed
        panel_flujo.setVisible(true);
        panel_red.setVisible(false);
        panel_organigrama.setVisible(false);
    }//GEN-LAST:event_jb_flujoActionPerformed

    private void jb_redActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_redActionPerformed
        panel_flujo.setVisible(false);
        panel_red.setVisible(true);
        panel_organigrama.setVisible(false);
    }//GEN-LAST:event_jb_redActionPerformed

    private void jb_organigramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_organigramaActionPerformed
        // TODO add your handling code here:
        panel_flujo.setVisible(false);
        panel_red.setVisible(false);
        panel_organigrama.setVisible(true);
    }//GEN-LAST:event_jb_organigramaActionPerformed

    //Empiezo a agregar nuevos jlabels en el diagrama de flujo
    private void flujo_crear_procesoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flujo_crear_procesoMouseClicked
        drag = new Drag("././Dibujos./Flujo./flujo_proceso.png", "Proceso");
        jp_flujo.add(drag);
        jp_flujo.repaint();

        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_flujo_crear_procesoMouseClicked

    ///////Llena mi jpanel, que contiene las fuentes,estilos,colores,tama√±o
    public void llenarfuente() {
        String[] font = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        DefaultComboBoxModel model = (DefaultComboBoxModel) jp_color_fuente.getModel();

        for (int i = 0; i < font.length; i++) {
            model.addElement(font[i]);
        }
        jp_color_fuente.setModel(model);
    }

    private void jp_color_fuenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jp_color_fuenteItemStateChanged

        Font ff = este.getFont();
        este.setFont(new Font(jp_color_fuente.getSelectedItem().toString(), ff.getStyle(), ff.getSize()));

    }//GEN-LAST:event_jp_color_fuenteItemStateChanged

    private void jp_color_estiloItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jp_color_estiloItemStateChanged
        // TODO add your handling code here:
        Font ff = este.getFont();
        if (jp_color_estilo.getSelectedIndex() == 0) {
            este.setFont(new Font(ff.getName(), Font.PLAIN, ff.getSize()));
        } else if (jp_color_estilo.getSelectedIndex() == 1) {
            este.setFont(new Font(ff.getName(), Font.BOLD, ff.getSize()));
        } else if (jp_color_estilo.getSelectedIndex() == 2) {
            este.setFont(new Font(ff.getName(), Font.ITALIC, ff.getSize()));
        }
    }//GEN-LAST:event_jp_color_estiloItemStateChanged

    private void jp_color_tama√±oItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jp_color_tama√±oItemStateChanged

        Font ff = este.getFont();
        este.setFont(new Font(ff.getFontName(), ff.getStyle(), Integer.parseInt(jp_color_tama√±o.getSelectedItem().toString())));
    }//GEN-LAST:event_jp_color_tama√±oItemStateChanged

    ////////Empieza a cambiar el color de la letra o del background del jlabel seleccionado
    private void negroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_negroMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.black);
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.black);
        }
    }//GEN-LAST:event_negroMouseClicked

    private void rojoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rojoMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.red);
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.red);
        }

    }//GEN-LAST:event_rojoMouseClicked

    private void blancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_blancoMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.white);
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.white);
        }
    }//GEN-LAST:event_blancoMouseClicked

    private void grisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grisMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.DARK_GRAY);
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.DARK_GRAY);
        }

    }//GEN-LAST:event_grisMouseClicked

    private void gris_suaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gris_suaveMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.gray);
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.gray);
        }
    }//GEN-LAST:event_gris_suaveMouseClicked

    private void marronMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marronMouseClicked

        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#8B0000"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#8B0000"));
        }
    }//GEN-LAST:event_marronMouseClicked

    private void cafeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cafeMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#8B4513"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#8B4513"));
        }
    }//GEN-LAST:event_cafeMouseClicked

    private void rosadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rosadoMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#FF00FF"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#FF00FF"));
        }
    }//GEN-LAST:event_rosadoMouseClicked

    private void naranjaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_naranjaMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#FF4500"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#FF4500"));
        }
    }//GEN-LAST:event_naranjaMouseClicked

    private void doradoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doradoMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#DAA520"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#DAA520"));
        }
    }//GEN-LAST:event_doradoMouseClicked

    private void amarilloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_amarilloMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.yellow);
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.yellow);
        }
    }//GEN-LAST:event_amarilloMouseClicked

    private void pielMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pielMouseClicked
        // TODO add your handling code here:
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#F0E68C"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#F0E68C"));
        }
    }//GEN-LAST:event_pielMouseClicked

    private void verdeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verdeMouseClicked
        // TODO add your handling code here:
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#006400"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#006400"));
        }
    }//GEN-LAST:event_verdeMouseClicked

    private void verde_claroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verde_claroMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#00FF00"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#00FF00"));
        }
    }//GEN-LAST:event_verde_claroMouseClicked

    private void celesteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_celesteMouseClicked
        // TODO add your handling code here:
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#4169E1"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#4169E1"));
        }
    }//GEN-LAST:event_celesteMouseClicked

    private void azul_claroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_azul_claroMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.CYAN);
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.CYAN);
        }
    }//GEN-LAST:event_azul_claroMouseClicked

    private void azulMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_azulMouseClicked
        // TODO add your handling code here:
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#00008B"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#00008B"));
        }

    }//GEN-LAST:event_azulMouseClicked

    private void azul_feoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_azul_feoMouseClicked
        // TODO add your handling code here:
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#4682B4"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#4682B4"));
        }
    }//GEN-LAST:event_azul_feoMouseClicked

    private void moradoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moradoMouseClicked
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#800080"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setBackground(Color.decode("#800080"));
        }
    }//GEN-LAST:event_moradoMouseClicked

    private void morado_claroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_morado_claroMouseClicked
        // TODO add your handling code here:
        if (!evt.isMetaDown()) {
            este.setForeground(Color.decode("#DDA0DD"));
        } else if (evt.isMetaDown()) {
            este.setOpaque(true);
            este.setForeground(Color.decode("#DDA0DD"));
        }
    }//GEN-LAST:event_morado_claroMouseClicked

    //////Me lleva al jDialog donde creo,guardo,abro,modifico todos mis diagramas
    private void crear_flujoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crear_flujoMouseClicked
        if (!cr_flujo.isActive()) {
            copiar = null;
            Pegar.setEnabled(false);
        }
        jp_flujo.repaint();
        flujo_colors.setLayout(new FlowLayout());
        llenarfuente();
        flujo_colors.add(jp_color);

        cr_flujo.setModal(true);
        cr_flujo.pack();
        cr_flujo.setVisible(true);

    }//GEN-LAST:event_crear_flujoMouseClicked

    private void crear_redMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crear_redMouseClicked
        if (!cr_red.isActive()) {
            copiar = null;
            Pegar.setEnabled(false);
        }
        jp_red.repaint();
        flujo_colors1.setLayout(new FlowLayout());
        llenarfuente();
        flujo_colors1.add(jp_color);

        cr_red.setModal(true);
        cr_red.pack();
        cr_red.setVisible(true);
    }//GEN-LAST:event_crear_redMouseClicked

    private void crear_orgranigramaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crear_orgranigramaMouseClicked
        // TODO add your handling code here:
        if (!cr_organigrama.isActive()) {
            copiar = null;
            Pegar.setEnabled(false);
        }
        jp_organigrama.repaint();
        flujo_colors2.setLayout(new FlowLayout());
        llenarfuente();
        flujo_colors2.add(jp_color);

        cr_organigrama.setModal(true);
        cr_organigrama.pack();
        cr_organigrama.setVisible(true);
    }//GEN-LAST:event_crear_orgranigramaMouseClicked

    ////////////Agrego nuevo JLabels al panel correspondiente con su imagen correspondiente
    private void flujo_add_decisionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flujo_add_decisionMouseClicked
        //crear una nueva decision
        drag = new Drag("././Dibujos./Flujo./flujo_decision.png", "Decision");
        jp_flujo.add(drag);
        jp_flujo.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_flujo_add_decisionMouseClicked

    private void flujo_add_subprocesoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flujo_add_subprocesoMouseClicked
        //crear un nuevo subproceso
        drag = new Drag("././Dibujos./Flujo./flujo_sp.png", "Subproceso");
        jp_flujo.add(drag);
        jp_flujo.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_flujo_add_subprocesoMouseClicked

    private void flujo_crear_inicioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flujo_crear_inicioMouseClicked
        //crear un nuevo inicio/fin
        drag = new Drag("././Dibujos./Flujo./flujo_fin.png", "Inicio/Fin");
        jp_flujo.add(drag);
        jp_flujo.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_flujo_crear_inicioMouseClicked

    private void flujo_crear_documentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flujo_crear_documentoMouseClicked
        //crear un nuevo documento
        drag = new Drag("././Dibujos./Flujo./flujo_doc.png", "Documento");
        jp_flujo.add(drag);
        jp_flujo.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_flujo_crear_documentoMouseClicked

    private void flujo_crear_datosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flujo_crear_datosMouseClicked
        //crear nuevo dato
        drag = new Drag("././Dibujos./Flujo./flujo_datos.png", "Datos");
        jp_flujo.add(drag);
        jp_flujo.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_flujo_crear_datosMouseClicked

    private void red_add_pcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_pcMouseClicked
        // crear pc en red
        drag = new Drag("././Dibujos./Red./red_pc.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_pcMouseClicked

    private void red_add_laptopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_laptopMouseClicked
        // crear laptop en red
        drag = new Drag("././Dibujos./Red./red_laptop.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_laptopMouseClicked

    private void red_add_terminalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_terminalMouseClicked
        // crear terminal en red
        drag = new Drag("././Dibujos./Red./red_terminal.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_terminalMouseClicked

    private void red_add_tabletMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_tabletMouseClicked
        // crear tablet pc en red
        drag = new Drag("././Dibujos./Red./red_tablet.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_tabletMouseClicked

    private void red_add_pdaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_pdaMouseClicked
        // crear pda en red
        drag = new Drag("././Dibujos./Red./red_pda.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_pdaMouseClicked

    private void red_add_fibraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_fibraMouseClicked
        // crear fibra en red
        drag = new Drag("././Dibujos./Red./red_fibra.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_fibraMouseClicked

    private void red_add_panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_panelMouseClicked
        // crear panel conexion en red
        drag = new Drag("././Dibujos./Red./red_conex.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_panelMouseClicked

    private void red_add_repetidorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_repetidorMouseClicked
        // crear repetidor en red
        drag = new Drag("././Dibujos./Red./red_repetidor.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_repetidorMouseClicked

    private void red_add_centralMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_centralMouseClicked
        // crear central comunicacion en red
        drag = new Drag("././Dibujos./Red./red_com.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_centralMouseClicked

    private void red_add_torreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_torreMouseClicked
        // crear torre en red
        drag = new Drag("././Dibujos./Red./red_torre.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_torreMouseClicked

    private void red_add_sateliteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_sateliteMouseClicked
        // crear satelite en red
        drag = new Drag("././Dibujos./Red./red_satelite.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_sateliteMouseClicked

    private void red_add_antenaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_antenaMouseClicked
        // crear antena en red
        drag = new Drag("././Dibujos./Red./red_antena.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_antenaMouseClicked

    private void red_Add_lectorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_Add_lectorMouseClicked
        // crear lector en red
        drag = new Drag("././Dibujos./Red./red_lector.png", "");
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_Add_lectorMouseClicked

    private void orga_add_ejecutivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orga_add_ejecutivoMouseClicked
        // crear ejecutivo en organigrama
        drag = new Drag("././Dibujos./Organigrama./cuadrado.png", "Ejecutivo");
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_orga_add_ejecutivoMouseClicked

    private void orga_add_directorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orga_add_directorMouseClicked
        // crear director en organigrama
        drag = new Drag("././Dibujos./Organigrama./director.png", "Director");
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_orga_add_directorMouseClicked

    private void orga_add_puestoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orga_add_puestoMouseClicked
        // crear puesto en organigrama
        drag = new Drag("././Dibujos./Organigrama./puesto.png", "Puesto");
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_orga_add_puestoMouseClicked

    private void orga_add_consultorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orga_add_consultorMouseClicked
        // crear consultor en organigrama
        drag = new Drag("././Dibujos./Organigrama./consultor.png", "Consultor");
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_orga_add_consultorMouseClicked

    private void orga_add_ayudanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orga_add_ayudanteMouseClicked
        // crear ayudante en organigrama
        drag = new Drag("././Dibujos./Organigrama./ayudante.png", "Ayudante");
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_orga_add_ayudanteMouseClicked

    private void orga_add_vacanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orga_add_vacanteMouseClicked
        // crear vacante en organigrama
        drag = new Drag("././Dibujos./Organigrama./cuadradopun.png", "Vacante");
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_orga_add_vacanteMouseClicked

    private void orga_add_informelineaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orga_add_informelineaMouseClicked
        // crear informe de linea en organigrama
        drag = new Drag("././Dibujos./Organigrama./lineapunteada.png", "Informe");
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_orga_add_informelineaMouseClicked

    //////////Aqui empieza el codigo para salvar o abrir el JPanel del diagrama que quiera
    private void jp_flujo_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_flujo_guardarMouseClicked
        JFileChooser jfc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("PNG", "png");
        FileFilter filtro2 = new FileNameExtensionFilter("JPG", "jpg");
        FileFilter filtro3 = new FileNameExtensionFilter("PDF", "pdf");
        FileFilter filtro4 = new FileNameExtensionFilter("JPEG", "jpeg");
        FileFilter filtro5 = new FileNameExtensionFilter("Dany", "dany");
        jfc.addChoosableFileFilter(filtro);
        jfc.addChoosableFileFilter(filtro2);
        jfc.addChoosableFileFilter(filtro3);
        jfc.addChoosableFileFilter(filtro4);
        jfc.addChoosableFileFilter(filtro5);

        int op = jfc.showSaveDialog(jfc);

        if (op == JFileChooser.APPROVE_OPTION) {
            if (jfc.getFileFilter().getDescription().equals("PNG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_flujo.getWidth(), jp_flujo.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_flujo.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".png");
                    ImageIO.write(bi, "png", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("JPG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_flujo.getWidth(), jp_flujo.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_flujo.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".jpg");
                    ImageIO.write(bi, "jpg", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("PDF")) {
                try {
                    Document documentPDF = new Document();
                    PdfWriter pdf = PdfWriter.getInstance(documentPDF, new FileOutputStream(jfc.getSelectedFile().getPath() + ".pdf"));
                    documentPDF.open();

                    documentPDF.addAuthor("Dany Cheong");
                    documentPDF.addCreator("DC");

                    BufferedImage bi = new BufferedImage(jp_flujo.getWidth(), jp_flujo.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_flujo.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".png");
                    ImageIO.write(bi, "png", archivo);
                    documentPDF.add(com.lowagie.text.Image.getInstance(jfc.getSelectedFile().toString() + ".png"));
                    archivo.delete();

                    documentPDF.close();
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("JPEG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_flujo.getWidth(), jp_flujo.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_flujo.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".jpeg");
                    ImageIO.write(bi, "jpeg", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("Dany")) {
                if (jfc.getSelectedFile().exists()) {//si el archivo ya existe, y salvo el panel en ese mismo archivo
                    try {
                        File archivo = null;
                        archivo = new File(jfc.getSelectedFile().getPath());

                        FileInputStream fis = new FileInputStream(archivo);
                        ObjectInputStream ois = new ObjectInputStream(fis);
                        Pane_temp panel;
                        ArrayList<Pane_temp> lista2 = new ArrayList();
                        try {
                            while ((panel = (Pane_temp) ois.readObject()) != null) {
                                lista2.add(panel);
                            }
                        } catch (Exception e) {

                        } finally {
                            fis.close();
                            ois.close();
                        }

                        for (int i = 0; i < lista.size(); i++) {
                            lista2.add(lista.get(i));
                        }

                        FileOutputStream fos = new FileOutputStream(archivo);
                        ObjectOutputStream oos = new ObjectOutputStream(fos);

                        for (Pane_temp temporal : lista2) {
                            oos.writeObject(temporal);
                        }
                        oos.flush();
                        oos.close();
                        fos.close();
                    } catch (Exception e) {

                    }
                } else { //si el archivo no existe y estoy creando uno nuevo
                    File archivo = null;
                    try {
                        archivo = new File(jfc.getSelectedFile().getPath() + ".dany");
                        //crear archivo que no existe
                        FileOutputStream fos = new FileOutputStream(archivo);
                        ObjectOutputStream oos = new ObjectOutputStream(fos);
                        for (int i = 0; i < lista.size(); i++) {
                            oos.writeObject(lista.get(i));
                        }
                        oos.flush();
                        fos.close();
                        oos.close();
                        lista.removeAll(lista);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    } finally {

                    }
                }
            }

        }
    }//GEN-LAST:event_jp_flujo_guardarMouseClicked

    private void cr_flujo_abrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr_flujo_abrirMouseClicked
        /////Despues de abrir, tambien modificamos aqui mismo, y lo volvemos a salvar con el mismo nombre
        JFileChooser jfc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("Archivos Dany", "dany");
        jfc.addChoosableFileFilter(filtro);

        jp_flujo.removeAll();
        jp_flujo.repaint();

        int op = jfc.showOpenDialog(jfc);

        try {
            Path pat = jfc.getSelectedFile().toPath();
            File archivo = new File(pat.toString());
            FileInputStream fis = new FileInputStream(archivo);
            ObjectInputStream ois = new ObjectInputStream(fis);
            ArrayList<JLabel> componentes = new ArrayList();
            Pane_temp temporal;
            try {
                while ((temporal = (Pane_temp) ois.readObject()) != null) {
                    componentes.add(temporal.getLabel());
                }
            } catch (Exception ex) {

            } finally {
                fis.close();
                ois.close();
            }

            for (int i = 0; i < componentes.size(); i++) {
                final JLabel open = componentes.get(i);
                open.addMouseListener(new java.awt.event.MouseListener() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        este = open;
                        try {
                            if (e.isMetaDown()) {
                                este.setComponentPopupMenu(menu_pop);
                                int x = e.getX();
                                int y = e.getY();
                                if (e.getComponent() instanceof Drag) {
                                    menu_pop.show(e.getComponent(), x, y);

                                }
                            }
                        } catch (Exception ex) {
                        }
                    }

                    @Override
                    public void mousePressed(MouseEvent e) {

                    }

                    @Override
                    public void mouseReleased(MouseEvent e) {
                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {
                    }

                    @Override
                    public void mouseExited(MouseEvent e) {
                    }
                });

                jp_flujo.add(open);
                jp_flujo.revalidate();
                jp_flujo.repaint();
            }
        } catch (Exception e) {

        } finally {

        }
    }//GEN-LAST:event_cr_flujo_abrirMouseClicked

    private void cr_red_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr_red_guardarMouseClicked
        JFileChooser jfc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("PNG", "png");
        FileFilter filtro2 = new FileNameExtensionFilter("JPG", "jpg");
        FileFilter filtro3 = new FileNameExtensionFilter("PDF", "pdf");
        FileFilter filtro4 = new FileNameExtensionFilter("JPEG", "jpeg");
        FileFilter filtro5 = new FileNameExtensionFilter("Dany", "dany");
        jfc.addChoosableFileFilter(filtro);
        jfc.addChoosableFileFilter(filtro2);
        jfc.addChoosableFileFilter(filtro3);
        jfc.addChoosableFileFilter(filtro4);
        jfc.addChoosableFileFilter(filtro5);

        int op = jfc.showSaveDialog(jfc);

        if (op == JFileChooser.APPROVE_OPTION) {
            if (jfc.getFileFilter().getDescription().equals("PNG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_red.getWidth(), jp_red.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_red.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".png");
                    ImageIO.write(bi, "png", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("JPG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_red.getWidth(), jp_red.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_red.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".jpg");
                    ImageIO.write(bi, "jpg", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("PDF")) {
                try {
                    Document documentPDF = new Document();
                    PdfWriter pdf = PdfWriter.getInstance(documentPDF, new FileOutputStream(jfc.getSelectedFile().getPath() + ".pdf"));
                    documentPDF.open();

                    documentPDF.addAuthor("Dany Cheong");
                    documentPDF.addCreator("DC");

                    BufferedImage bi = new BufferedImage(jp_red.getWidth(), jp_red.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_red.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".png");
                    ImageIO.write(bi, "png", archivo);
                    documentPDF.add(com.lowagie.text.Image.getInstance(jfc.getSelectedFile().toString() + ".png"));
                    archivo.delete();

                    documentPDF.close();
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("JPEG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_red.getWidth(), jp_red.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_red.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".jpeg");
                    ImageIO.write(bi, "jpeg", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("Dany")) {
                if (jfc.getSelectedFile().exists()) {
                    try {
                        File archivo = null;
                        archivo = new File(jfc.getSelectedFile().getPath());

                        FileInputStream fis = new FileInputStream(archivo);
                        ObjectInputStream ois = new ObjectInputStream(fis);
                        Pane_temp panel;
                        ArrayList<Pane_temp> lista2 = new ArrayList();
                        try {
                            while ((panel = (Pane_temp) ois.readObject()) != null) {
                                lista2.add(panel);
                            }
                        } catch (Exception e) {

                        } finally {
                            fis.close();
                            ois.close();
                        }

                        for (int i = 0; i < lista.size(); i++) {
                            lista2.add(lista.get(i));
                        }

                        FileOutputStream fos = new FileOutputStream(archivo);
                        ObjectOutputStream oos = new ObjectOutputStream(fos);

                        for (Pane_temp temporal : lista2) {
                            oos.writeObject(temporal);
                        }
                        oos.flush();
                        oos.close();
                        fos.close();
                    } catch (Exception e) {

                    }
                } else {
                    File archivo = null;
                    try {
                        archivo = new File(jfc.getSelectedFile().getPath() + ".dany");
                        //crear archivo que no existe
                        FileOutputStream fos = new FileOutputStream(archivo);
                        ObjectOutputStream oos = new ObjectOutputStream(fos);
                        for (int i = 0; i < lista.size(); i++) {
                            oos.writeObject(lista.get(i));
                        }
                        oos.flush();
                        fos.close();
                        oos.close();
                        lista.removeAll(lista);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    } finally {

                    }
                }
            }

        }
    }//GEN-LAST:event_cr_red_guardarMouseClicked

    private void cr_red_abrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr_red_abrirMouseClicked
        JFileChooser jfc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("Archivos Dany", "dany");
        jfc.addChoosableFileFilter(filtro);

        jp_red.removeAll();
        jp_red.repaint();

        int op = jfc.showOpenDialog(jfc);

        try {
            Path pat = jfc.getSelectedFile().toPath();
            File archivo = new File(pat.toString());
            FileInputStream fis = new FileInputStream(archivo);
            ObjectInputStream ois = new ObjectInputStream(fis);
            ArrayList<JLabel> componentes = new ArrayList();
            Pane_temp temporal;
            try {
                while ((temporal = (Pane_temp) ois.readObject()) != null) {
                    componentes.add(temporal.getLabel());
                }
            } catch (Exception ex) {

            } finally {
                fis.close();
                ois.close();
            }

            for (int i = 0; i < componentes.size(); i++) {
                final JLabel open = componentes.get(i);
                open.addMouseListener(new java.awt.event.MouseListener() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        este = open;
                        try {
                            if (e.isMetaDown()) {
                                este.setComponentPopupMenu(menu_pop);
                                int x = e.getX();
                                int y = e.getY();
                                if (e.getComponent() instanceof Drag) {
                                    menu_pop.show(e.getComponent(), x, y);

                                }
                            }
                        } catch (Exception ex) {
                        }
                    }

                    @Override
                    public void mousePressed(MouseEvent e) {

                    }

                    @Override
                    public void mouseReleased(MouseEvent e) {
                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {
                    }

                    @Override
                    public void mouseExited(MouseEvent e) {
                    }
                });

                jp_red.add(open);
                jp_red.revalidate();
                jp_red.repaint();
            }
        } catch (Exception e) {

        } finally {

        }
    }//GEN-LAST:event_cr_red_abrirMouseClicked

    private void cr_organigrama_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr_organigrama_guardarMouseClicked
        JFileChooser jfc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("PNG", "png");
        FileFilter filtro2 = new FileNameExtensionFilter("JPG", "jpg");
        FileFilter filtro3 = new FileNameExtensionFilter("PDF", "pdf");
        FileFilter filtro4 = new FileNameExtensionFilter("JPEG", "jpeg");
        FileFilter filtro5 = new FileNameExtensionFilter("Dany", "dany");
        jfc.addChoosableFileFilter(filtro);
        jfc.addChoosableFileFilter(filtro2);
        jfc.addChoosableFileFilter(filtro3);
        jfc.addChoosableFileFilter(filtro4);
        jfc.addChoosableFileFilter(filtro5);

        int op = jfc.showSaveDialog(jfc);

        if (op == JFileChooser.APPROVE_OPTION) {
            if (jfc.getFileFilter().getDescription().equals("PNG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_organigrama.getWidth(), jp_organigrama.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_organigrama.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".png");
                    ImageIO.write(bi, "png", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("JPG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_organigrama.getWidth(), jp_organigrama.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_organigrama.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".jpg");
                    ImageIO.write(bi, "jpg", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("PDF")) {
                try {
                    Document documentPDF = new Document();
                    PdfWriter pdf = PdfWriter.getInstance(documentPDF, new FileOutputStream(jfc.getSelectedFile().getPath() + ".pdf"));
                    documentPDF.open();

                    documentPDF.addAuthor("Dany Cheong");
                    documentPDF.addCreator("DC");

                    BufferedImage bi = new BufferedImage(jp_organigrama.getWidth(), jp_organigrama.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_organigrama.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".png");
                    ImageIO.write(bi, "png", archivo);
                    documentPDF.add(com.lowagie.text.Image.getInstance(jfc.getSelectedFile().toString() + ".png"));
                    archivo.delete();

                    documentPDF.close();
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("JPEG")) {
                try {
                    BufferedImage bi = new BufferedImage(jp_organigrama.getWidth(), jp_organigrama.getHeight(), BufferedImage.TYPE_INT_RGB);
                    Graphics2D g = bi.createGraphics();
                    jp_organigrama.paint(g);
                    File archivo = new File(jfc.getSelectedFile().toString() + ".jpeg");
                    ImageIO.write(bi, "jpeg", archivo);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jfc.getFileFilter().getDescription().equals("Dany")) {
                if (jfc.getSelectedFile().exists()) {
                    try {
                        File archivo = null;
                        archivo = new File(jfc.getSelectedFile().getPath());

                        FileInputStream fis = new FileInputStream(archivo);
                        ObjectInputStream ois = new ObjectInputStream(fis);
                        Pane_temp panel;
                        ArrayList<Pane_temp> lista2 = new ArrayList();
                        try {
                            while ((panel = (Pane_temp) ois.readObject()) != null) {
                                lista2.add(panel);
                            }
                        } catch (Exception e) {

                        } finally {
                            fis.close();
                            ois.close();
                        }

                        for (int i = 0; i < lista.size(); i++) {
                            lista2.add(lista.get(i));
                        }

                        FileOutputStream fos = new FileOutputStream(archivo);
                        ObjectOutputStream oos = new ObjectOutputStream(fos);

                        for (Pane_temp temporal : lista2) {
                            oos.writeObject(temporal);
                        }
                        oos.flush();
                        oos.close();
                        fos.close();
                    } catch (Exception e) {

                    }
                } else {
                    File archivo = null;
                    try {
                        archivo = new File(jfc.getSelectedFile().getPath() + ".dany");
                        //crear archivo que no existe
                        FileOutputStream fos = new FileOutputStream(archivo);
                        ObjectOutputStream oos = new ObjectOutputStream(fos);
                        for (int i = 0; i < lista.size(); i++) {
                            oos.writeObject(lista.get(i));
                        }
                        oos.flush();
                        fos.close();
                        oos.close();
                        lista.removeAll(lista);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    } finally {

                    }
                }
            }

        }
    }//GEN-LAST:event_cr_organigrama_guardarMouseClicked

    private void cr_organigrama_abrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr_organigrama_abrirMouseClicked
        JFileChooser jfc = new JFileChooser();
        FileFilter filtro = new FileNameExtensionFilter("Archivos Dany", "dany");
        jfc.addChoosableFileFilter(filtro);

        jp_organigrama.removeAll();
        jp_organigrama.repaint();

        int op = jfc.showOpenDialog(jfc);

        try {
            Path pat = jfc.getSelectedFile().toPath();
            File archivo = new File(pat.toString());
            FileInputStream fis = new FileInputStream(archivo);
            ObjectInputStream ois = new ObjectInputStream(fis);
            ArrayList<JLabel> componentes = new ArrayList();
            Pane_temp temporal;
            try {
                while ((temporal = (Pane_temp) ois.readObject()) != null) {
                    componentes.add(temporal.getLabel());
                }
            } catch (Exception ex) {

            } finally {
                fis.close();
                ois.close();
            }

            for (int i = 0; i < componentes.size(); i++) {
                final JLabel open = componentes.get(i);
                open.addMouseListener(new java.awt.event.MouseListener() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        este = open;
                        try {
                            if (e.isMetaDown()) {
                                este.setComponentPopupMenu(menu_pop);
                                int x = e.getX();
                                int y = e.getY();
                                if (e.getComponent() instanceof Drag) {
                                    menu_pop.show(e.getComponent(), x, y);

                                }
                            }
                        } catch (Exception ex) {
                        }
                    }

                    @Override
                    public void mousePressed(MouseEvent e) {

                    }

                    @Override
                    public void mouseReleased(MouseEvent e) {
                    }

                    @Override
                    public void mouseEntered(MouseEvent e) {
                    }

                    @Override
                    public void mouseExited(MouseEvent e) {
                    }
                });

                jp_organigrama.add(open);
                jp_organigrama.revalidate();
                jp_organigrama.repaint();
            }
        } catch (Exception e) {

        } finally {

        }
    }//GEN-LAST:event_cr_organigrama_abrirMouseClicked

    private void popm_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popm_textActionPerformed
        ////Es la opcion del popup menu que me permite cambiarle el texto al jLabel que yo seleccione
        String cambio = JOptionPane.showInputDialog("");
        este.setText(cambio);
    }//GEN-LAST:event_popm_textActionPerformed

    private void popm_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popm_eliminarActionPerformed
        ////Es la opcion del popup menu que me permite eliminar el jLabel que yo seleccione
        if (cr_flujo.isActive()) {
            jp_flujo.remove(este);
            jp_red.remove(este);
        } else if (cr_red.isActive()) {
            jp_organigrama.remove(este);
            jp_flujo.repaint();
        } else if (cr_organigrama.isActive()) {
            jp_red.repaint();
            jp_organigrama.repaint();
        }
    }//GEN-LAST:event_popm_eliminarActionPerformed

    public void image_actual() {
        ///////Este metodo lo que hace es actualizar el tama√±o de la imagen del jLabel seleccionado
        try {
            ImageIcon ii = (ImageIcon) este.getIcon();
            Icon icono = new ImageIcon(ii.getImage().getScaledInstance(este.getWidth(), este.getHeight(), Image.SCALE_SMOOTH));
            este.setIcon(icono);
        } catch (NullPointerException exc) {

        }
    }

    private void aumentar_sizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aumentar_sizeMousePressed
        /////////////Al darle click al boton de +, el jLabel junto a la imagen crecen
        este.setSize(este.getWidth() + 5, este.getHeight() + 5);
        image_actual();
    }//GEN-LAST:event_aumentar_sizeMousePressed


    private void decrease_sizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decrease_sizeMousePressed
        /////////////Al darle click al boton de -, el jLabel junto a la imagen encoje
        if (este.getWidth() == 5 && este.getHeight() == 5) {
            este.setSize(5, 5);
            image_actual();
        } else {
            este.setSize(este.getWidth() - 5, este.getHeight() - 5);
            image_actual();
        }
    }//GEN-LAST:event_decrease_sizeMousePressed

    private void flujo_add_verticalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flujo_add_verticalMouseClicked
        // agrego linea vertical
        drag = new Drag("./Dibujos./red_recto.png", "");
        drag.setSize(2, 70);
        jp_flujo.add(drag);
        jp_flujo.repaint();

        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }

                    }

                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        drag.addMouseMotionListener(new java.awt.event.MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                try {
                    if (e.isMetaDown()) {
                        int y = e.getY();
                        este.setSize(este.getWidth(), y);
                        image_actual();
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {

            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_flujo_add_verticalMouseClicked

    private void flujo_add_horizontalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flujo_add_horizontalMouseClicked
        // agrego linea horizontal
        drag = new Drag("./Dibujos./red_horizontal.png", "");
        drag.setSize(70, 2);
        jp_flujo.add(drag);
        jp_flujo.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        drag.addMouseMotionListener(new java.awt.event.MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                try {
                    if (e.isMetaDown()) {
                        int x = e.getX();
                        este.setSize(x, este.getHeight());
                        image_actual();
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {

            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_flujo_add_horizontalMouseClicked

    private void red_add_horizontalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_horizontalMouseClicked
        // agrego linea horizontal
        drag = new Drag("./Dibujos./red_horizontal.png", "");
        drag.setSize(70, 2);
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        drag.addMouseMotionListener(new java.awt.event.MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                try {
                    if (e.isMetaDown()) {
                        int x = e.getX();
                        este.setSize(x, este.getHeight());
                        image_actual();
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {

            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_horizontalMouseClicked

    private void red_add_verticalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_red_add_verticalMouseClicked
        // agrego linea vertical
        drag = new Drag("./Dibujos./red_recto.png", "");
        drag.setSize(2, 70);
        jp_red.add(drag);
        jp_red.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        drag.addMouseMotionListener(new java.awt.event.MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                try {
                    if (e.isMetaDown()) {
                        int y = e.getY();
                        este.setSize(este.getWidth(), y);
                        image_actual();
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {

            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_red_add_verticalMouseClicked

    private void organigrama_add_horizontalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_organigrama_add_horizontalMouseClicked
        // agrego linea horizontal
        drag = new Drag("./Dibujos./red_horizontal.png", "");
        drag.setSize(70, 2);
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);
                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        drag.addMouseMotionListener(new java.awt.event.MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                try {
                    if (e.isMetaDown()) {
                        int x = e.getX();
                        este.setSize(x, este.getHeight());
                        image_actual();
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {

            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_organigrama_add_horizontalMouseClicked

    private void organigrama_add_verticalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_organigrama_add_verticalMouseClicked
        // agrego linea vertical
        drag = new Drag("./Dibujos./red_recto.png", "");
        drag.setSize(2, 70);
        drag.setSize(2, 70);
        jp_organigrama.add(drag);
        jp_organigrama.repaint();
        drag.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                este = (JLabel) e.getComponent();
                try {
                    if (e.isMetaDown()) {
                        este.setComponentPopupMenu(menu_pop);
                        int x = e.getX();
                        int y = e.getY();
                        if (e.getComponent() instanceof Drag) {
                            menu_pop.show(e.getComponent(), x, y);

                        }
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        });
        drag.addMouseMotionListener(new java.awt.event.MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                try {
                    if (e.isMetaDown()) {
                        int y = e.getY();
                        este.setSize(este.getWidth(), y);
                        image_actual();
                    }
                } catch (Exception ex) {

                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {

            }
        });
        lista.add(new Pane_temp((JLabel) drag));
    }//GEN-LAST:event_organigrama_add_verticalMouseClicked

    private void limpiar_flujoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiar_flujoMouseClicked
        ///Cuando de click al boton limpiar, me quita todo lo que tenga en mi panel de flujo
        jp_flujo.removeAll();
        jp_flujo.repaint();
    }//GEN-LAST:event_limpiar_flujoMouseClicked

    private void limpiar_redMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiar_redMouseClicked
        ///Cuando de click al boton limpiar, me quita todo lo que tenga en mi panel de red
        jp_red.removeAll();
        jp_red.repaint();
    }//GEN-LAST:event_limpiar_redMouseClicked

    private void limpiar_organigramaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiar_organigramaMouseClicked
        ///Cuando de click al boton limpiar, me quita todo lo que tenga en mi panel de organigrama
        jp_organigrama.removeAll();
        jp_organigrama.repaint();
    }//GEN-LAST:event_limpiar_organigramaMouseClicked

    private void jp_flujoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_flujoMouseClicked
        /////Este metodo le agrega el popup menu para la opcion pegar
        if (evt.isMetaDown()) {
            jp_flujo.add(menu_pegar);
            menu_pegar.show(jp_flujo, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jp_flujoMouseClicked

    private void popm_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popm_copyActionPerformed
        //////Este metodo permite que le de copy al jlabel seleccionado, para luego pegarlo
        copiar = este;
        Pegar.setEnabled(true);

    }//GEN-LAST:event_popm_copyActionPerformed

    private void PegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PegarActionPerformed
        //Dependiendo de que copie va a pegarlo en el panel correspondiente
        //Creo un nuevo jLabel con los atributos del jLabel que habia copiado
        if (cr_flujo.isActive()) {
            int x = 0;
            int y = 0;
            int ancho = copiar.getWidth();
            int alto = copiar.getHeight();
            Icon icono = copiar.getIcon();
            String text = copiar.getText();
            Font ff = copiar.getFont();
            Color cc = copiar.getBackground();
            Color xx = copiar.getForeground();
            final Drag prueba = new Drag();

            prueba.paste(icono, copiar.getName(), x, y, ancho, alto, text, ff, cc, xx);
            prueba.addMouseListener(new java.awt.event.MouseListener() {

                @Override
                public void mouseClicked(MouseEvent e) {
                    este = (JLabel) prueba;
                    try {
                        if (e.isMetaDown()) {
                            este.setComponentPopupMenu(menu_pop);
                            int x = e.getX();
                            int y = e.getY();
                            if (e.getComponent() instanceof Drag) {
                                menu_pop.show(e.getComponent(), x, y);

                            }
                        }
                    } catch (Exception ex) {

                    }
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                }

                @Override
                public void mouseExited(MouseEvent e) {
                }
            });
            jp_flujo.add(prueba);
            jp_flujo.revalidate();
            jp_flujo.repaint();

        } else if (cr_red.isActive()) {
            int x = 0;
            int y = 0;
            int ancho = copiar.getWidth();
            int alto = copiar.getHeight();
            Icon icono = copiar.getIcon();
            String text = copiar.getText();
            Font ff = copiar.getFont();
            Color cc = copiar.getBackground();
            Color xx = copiar.getForeground();
            final Drag prueba = new Drag();

            prueba.paste(icono, copiar.getName(), x, y, ancho, alto, text, ff, cc, xx);
            prueba.addMouseListener(new java.awt.event.MouseListener() {

                @Override
                public void mouseClicked(MouseEvent e) {
                    este = (JLabel) prueba;
                    try {
                        if (e.isMetaDown()) {
                            este.setComponentPopupMenu(menu_pop);
                            int x = e.getX();
                            int y = e.getY();
                            if (e.getComponent() instanceof Drag) {
                                menu_pop.show(e.getComponent(), x, y);

                            }
                        }
                    } catch (Exception ex) {

                    }
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                }

                @Override
                public void mouseExited(MouseEvent e) {
                }
            });
            jp_red.add(prueba);
            jp_red.revalidate();
            jp_red.repaint();

        } else if (cr_organigrama.isActive()) {
            int x = 0;
            int y = 0;
            int ancho = copiar.getWidth();
            int alto = copiar.getHeight();
            Icon icono = copiar.getIcon();
            String text = copiar.getText();
            Font ff = copiar.getFont();
            Color cc = copiar.getBackground();
            Color xx = copiar.getForeground();
            final Drag prueba = new Drag();

            prueba.paste(icono, copiar.getName(), x, y, ancho, alto, text, ff, cc, xx);
            prueba.addMouseListener(new java.awt.event.MouseListener() {

                @Override
                public void mouseClicked(MouseEvent e) {
                    este = (JLabel) prueba;
                    try {
                        if (e.isMetaDown()) {
                            este.setComponentPopupMenu(menu_pop);
                            int x = e.getX();
                            int y = e.getY();
                            if (e.getComponent() instanceof Drag) {
                                menu_pop.show(e.getComponent(), x, y);

                            }
                        }
                    } catch (Exception ex) {

                    }
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                }

                @Override
                public void mouseExited(MouseEvent e) {
                }
            });
            jp_organigrama.add(prueba);
            jp_organigrama.revalidate();
            jp_organigrama.repaint();

        }
    }//GEN-LAST:event_PegarActionPerformed

    private void jp_redMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_redMouseClicked
        /////agrego popupmenu de pegar a mi panel de red
        if (evt.isMetaDown()) {
            jp_red.add(menu_pegar);
            menu_pegar.show(jp_red, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jp_redMouseClicked

    private void jp_organigramaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jp_organigramaMouseClicked
        /////agrego popupmenu de pegar a mi panel de organigrama
        if (evt.isMetaDown()) {
            jp_organigrama.add(menu_pegar);
            menu_pegar.show(jp_organigrama, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jp_organigramaMouseClicked

    private void cr_flujo_imprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr_flujo_imprimirMouseClicked
        /////al apretar imprimir, me imprime lo que contiene mi panel de flujo
        imprimir_panel = new Imprimir(jp_flujo);
    }//GEN-LAST:event_cr_flujo_imprimirMouseClicked

    private void cr_red_imprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr_red_imprimirMouseClicked
        /////al apretar imprimir, me imprime lo que contiene mi panel de red
        imprimir_panel = new Imprimir(jp_red);
    }//GEN-LAST:event_cr_red_imprimirMouseClicked

    private void cr_organigrama_imprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cr_organigrama_imprimirMouseClicked
        /////al apretar imprimir, me imprime lo que contiene mi panel de organigrama
        imprimir_panel = new Imprimir(jp_organigrama);
    }//GEN-LAST:event_cr_organigrama_imprimirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Instrucciones;
    private javax.swing.JMenuItem Pegar;
    private javax.swing.JLabel amarillo;
    private javax.swing.JButton aumentar_size;
    private javax.swing.JLabel azul;
    private javax.swing.JLabel azul_claro;
    private javax.swing.JLabel azul_feo;
    private javax.swing.JLabel blanco;
    private javax.swing.JLabel cafe;
    private javax.swing.JLabel celeste;
    private javax.swing.JDialog cr_flujo;
    private javax.swing.JButton cr_flujo_abrir;
    private javax.swing.JButton cr_flujo_imprimir;
    private javax.swing.JDialog cr_organigrama;
    private javax.swing.JButton cr_organigrama_abrir;
    private javax.swing.JButton cr_organigrama_guardar;
    private javax.swing.JButton cr_organigrama_imprimir;
    private javax.swing.JDialog cr_red;
    private javax.swing.JButton cr_red_abrir;
    private javax.swing.JButton cr_red_guardar;
    private javax.swing.JButton cr_red_imprimir;
    private javax.swing.JButton crear_flujo;
    private javax.swing.JButton crear_orgranigrama;
    private javax.swing.JButton crear_red;
    private javax.swing.JButton decrease_size;
    private javax.swing.JLabel dorado;
    private javax.swing.JButton flujo_add_decision;
    private javax.swing.JPanel flujo_add_horizontal;
    private javax.swing.JButton flujo_add_subproceso;
    private javax.swing.JPanel flujo_add_vertical;
    private javax.swing.JPanel flujo_colors;
    private javax.swing.JPanel flujo_colors1;
    private javax.swing.JPanel flujo_colors2;
    private javax.swing.JButton flujo_crear_datos;
    private javax.swing.JButton flujo_crear_documento;
    private javax.swing.JButton flujo_crear_horizontal;
    private javax.swing.JButton flujo_crear_horizontal1;
    private javax.swing.JButton flujo_crear_horizontal2;
    private javax.swing.JButton flujo_crear_inicio;
    private javax.swing.JButton flujo_crear_proceso;
    private javax.swing.JLabel gris;
    private javax.swing.JLabel gris_suave;
    private javax.swing.JLayeredPane inicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jb_flujo;
    private javax.swing.JButton jb_organigrama;
    private javax.swing.JButton jb_red;
    private javax.swing.JPanel jp_color;
    private javax.swing.JComboBox jp_color_estilo;
    private javax.swing.JComboBox jp_color_fuente;
    private javax.swing.JComboBox jp_color_tama√±o;
    private javax.swing.JPanel jp_flujo;
    private javax.swing.JButton jp_flujo_guardar;
    private javax.swing.JButton jp_flujo_vertical;
    private javax.swing.JButton jp_flujo_vertical1;
    private javax.swing.JButton jp_flujo_vertical2;
    private javax.swing.JPanel jp_organigrama;
    private javax.swing.JPanel jp_red;
    private javax.swing.JButton limpiar_flujo;
    private javax.swing.JButton limpiar_organigrama;
    private javax.swing.JButton limpiar_red;
    private javax.swing.JLabel marron;
    private javax.swing.JPopupMenu menu_pegar;
    private javax.swing.JPopupMenu menu_pop;
    private javax.swing.JLabel morado;
    private javax.swing.JLabel morado_claro;
    private javax.swing.JLabel naranja;
    private javax.swing.JLabel negro;
    private javax.swing.JButton orga_add_ayudante;
    private javax.swing.JButton orga_add_consultor;
    private javax.swing.JButton orga_add_director;
    private javax.swing.JButton orga_add_ejecutivo;
    private javax.swing.JButton orga_add_informelinea;
    private javax.swing.JButton orga_add_puesto;
    private javax.swing.JButton orga_add_vacante;
    private javax.swing.JPanel organigrama_add_horizontal;
    private javax.swing.JPanel organigrama_add_vertical;
    private javax.swing.JPanel panel_flujo;
    private javax.swing.JPanel panel_organigrama;
    private javax.swing.JPanel panel_red;
    private javax.swing.JLabel piel;
    private javax.swing.JMenuItem popm_copy;
    private javax.swing.JMenuItem popm_eliminar;
    private javax.swing.JMenuItem popm_text;
    private javax.swing.JButton red_Add_lector;
    private javax.swing.JButton red_add_antena;
    private javax.swing.JButton red_add_central;
    private javax.swing.JButton red_add_fibra;
    private javax.swing.JPanel red_add_horizontal;
    private javax.swing.JButton red_add_laptop;
    private javax.swing.JButton red_add_panel;
    private javax.swing.JButton red_add_pc;
    private javax.swing.JButton red_add_pda;
    private javax.swing.JButton red_add_repetidor;
    private javax.swing.JButton red_add_satelite;
    private javax.swing.JButton red_add_tablet;
    private javax.swing.JButton red_add_terminal;
    private javax.swing.JButton red_add_torre;
    private javax.swing.JPanel red_add_vertical;
    private javax.swing.JLabel rojo;
    private javax.swing.JLabel rosado;
    private javax.swing.JMenuItem salir;
    private javax.swing.JLabel verde;
    private javax.swing.JLabel verde_claro;
    // End of variables declaration//GEN-END:variables

    Drag drag;
    JLabel este = new JLabel();
    JLabel copiar = new JLabel();
    ArrayList<Pane_temp> lista = new ArrayList();
    Imprimir imprimir_panel;
}